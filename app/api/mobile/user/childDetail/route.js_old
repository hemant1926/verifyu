import { verifyToken } from "@/helper/jwtConfig";
import validator from "@/helper/validate";
import { PrismaClient } from "@prisma/client";
const prisma = new PrismaClient();

/**
 * Handles DELETE request to delete a child detail by its ID.
 * 
 * @param {Request} req - The request object.
 * @returns {Promise<Response>} - A promise that resolves to a Response object.
 */
export async function DELETE(req) {
  try {

    // const tokenData = await verifyToken();
    // if (!tokenData.success) {
    //   return Response.json(tokenData);
    // }

    const { searchParams } = new URL(req.url);
    const id = searchParams.get("id");

    const ValidatorRules = {
      id: "required",
    };

    const { error, status } = await new Promise((resolve) => {
      validator({ id }, ValidatorRules, {}, (error, status) => {
        resolve({ error, status });
      });
    });

    if (!status) {
      return Response.json({
        success: false,
        message: "Validation error",
        data: { ...error.errors },
      });
    }

    // Find the childDetail by ID
    const childDetail = await prisma.childDetail.findUnique({
      where: {
        id: id,
      },
    });

    if (!childDetail) {
      return Response.json({
        success: false,
        message: "Child detail not found",
        data: {},
      });
    }

    // Delete the childDetail
    await prisma.childDetail.delete({
      where: {
        id: id,
      },
    });

    // Return success response
    return Response.json({
      success: true,
      message: "Child detail deleted successfully",
      data: {},
    });
  } catch (error) {
    console.error("Error deleting child detail:", error);
    return Response.json({
      success: false,
      message: error.message,
      data: {},
    });
  }
}
